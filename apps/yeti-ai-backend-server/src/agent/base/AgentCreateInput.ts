/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { MemoryLogCreateNestedManyWithoutAgentsInput } from "./MemoryLogCreateNestedManyWithoutAgentsInput";
import { Type } from "class-transformer";
import { EnumAgentStatus } from "./EnumAgentStatus";
import { TaskCreateNestedManyWithoutAgentsInput } from "./TaskCreateNestedManyWithoutAgentsInput";
import { EnumAgentTypeField } from "./EnumAgentTypeField";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class AgentCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  activeSession?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => MemoryLogCreateNestedManyWithoutAgentsInput,
  })
  @ValidateNested()
  @Type(() => MemoryLogCreateNestedManyWithoutAgentsInput)
  @IsOptional()
  @Field(() => MemoryLogCreateNestedManyWithoutAgentsInput, {
    nullable: true,
  })
  memoryLogs?: MemoryLogCreateNestedManyWithoutAgentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumAgentStatus,
  })
  @IsEnum(EnumAgentStatus)
  @IsOptional()
  @Field(() => EnumAgentStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => TaskCreateNestedManyWithoutAgentsInput,
  })
  @ValidateNested()
  @Type(() => TaskCreateNestedManyWithoutAgentsInput)
  @IsOptional()
  @Field(() => TaskCreateNestedManyWithoutAgentsInput, {
    nullable: true,
  })
  tasks?: TaskCreateNestedManyWithoutAgentsInput;

  @ApiProperty({
    required: false,
    enum: EnumAgentTypeField,
  })
  @IsEnum(EnumAgentTypeField)
  @IsOptional()
  @Field(() => EnumAgentTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { AgentCreateInput as AgentCreateInput };
