/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Plugin as PrismaPlugin } from "@prisma/client";

export class PluginServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PluginCountArgs, "select">): Promise<number> {
    return this.prisma.plugin.count(args);
  }

  async plugins(args: Prisma.PluginFindManyArgs): Promise<PrismaPlugin[]> {
    return this.prisma.plugin.findMany(args);
  }
  async plugin(
    args: Prisma.PluginFindUniqueArgs
  ): Promise<PrismaPlugin | null> {
    return this.prisma.plugin.findUnique(args);
  }
  async createPlugin(args: Prisma.PluginCreateArgs): Promise<PrismaPlugin> {
    return this.prisma.plugin.create(args);
  }
  async updatePlugin(args: Prisma.PluginUpdateArgs): Promise<PrismaPlugin> {
    return this.prisma.plugin.update(args);
  }
  async deletePlugin(args: Prisma.PluginDeleteArgs): Promise<PrismaPlugin> {
    return this.prisma.plugin.delete(args);
  }
}
